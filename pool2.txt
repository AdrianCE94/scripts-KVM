#!/bin/bash

# Función para verificar si KVM está instalado y, si no lo está, instalarlo
check_kvm() {
    if ! command -v virsh &> /dev/null; then
        echo "KVM no está instalado. Instalando KVM..."
        if [ -f /etc/debian_version ]; then
            sudo apt update && sudo apt install -y qemu-kvm libvirt-bin
        elif [ -f /etc/redhat-release ]; then
            sudo yum install -y qemu-kvm libvirt
        fi
        echo "KVM instalado."
    else
        echo "KVM ya está instalado."
    fi
}

# Función para visualizar los pools existentes
view_pools() {
    sudo virsh pool-list --all
}

# Función para crear discos duros en un pool
create_disks() {
    read -p "Ingrese el número de discos a crear: " num_disks
    read -p "Ingrese el nombre del pool donde se crearán los discos: " pool_name

    for ((i=1; i<=num_disks; i++)); do
        read -p "Ingrese el nombre del disco $i: " disk_name
        read -p "Ingrese el tamaño del disco (ej. 10G): " disk_size
        sudo virsh vol-create-as "$pool_name" "$disk_name" "$disk_size" --format qcow2
    done
}

# Función para mostrar información de los discos duros creados
show_disk_info() {
    read -p "Ingrese el nombre del pool para mostrar los discos: " pool_name
    sudo virsh vol-list "$pool_name"
}

# Función para agregar discos duros a una máquina virtual
add_disks_to_vm() {
    read -p "Ingrese el nombre de la máquina virtual: " vm_name
    read -p "Ingrese el nombre del pool donde está el disco: " pool_name
    read -p "Ingrese el nombre del disco a agregar: " disk_name

    disk_path=$(sudo virsh vol-path --pool "$pool_name" "$disk_name")
    sudo virsh attach-disk "$vm_name" "$disk_path" vdb --cache none --persistent
}

# Función para crear e inicializar un pool de almacenamiento con arranque automático
create_pool() {
    read -p "Ingrese el nombre del pool a crear: " pool_name
    read -p "Ingrese la ruta del directorio para el pool: " pool_path
    sudo mkdir -p "$pool_path"
    sudo virsh pool-define-as "$pool_name" dir - - - - "$pool_path"
    sudo virsh pool-start "$pool_name"
    sudo virsh pool-autostart "$pool_name"
    echo "Pool '$pool_name' creado e inicializado."
}

# Función para borrar un pool
delete_pool() {
    while true; do
        view_pools
        read -p "Ingrese el nombre del pool a borrar o 'n' para salir: " pool_name
        [ "$pool_name" == "n" ] && break
        sudo virsh pool-destroy "$pool_name"
        sudo virsh pool-undefine "$pool_name"
        echo "Pool '$pool_name' borrado."
    done
}

# Función para generar el informe de pools
generate_report() {
    report_file="Informe_Pool.txt"
    sudo virsh pool-list --all > "$report_file"
    echo "Número de pools activos: $(sudo virsh pool-list | wc -l)" >> "$report_file"
    echo "Número de pools inactivos: $(sudo virsh pool-list --inactive | wc -l)" >> "$report_file"
    echo "Número de pools con arranque automático: $(sudo virsh pool-list --persistent | wc -l)" >> "$report_file"
    echo "Informe generado en $report_file."
}

# Menú principal
while true; do
    echo "Seleccione una opción:"
    echo "1) Visualizar los pools existentes"
    echo "2) Configurar un pool"
    echo "  a) Creación de los discos duros"
    echo "  b) Mostrar información de los discos duros"
    echo "  c) Agregar los discos duros a la máquina virtual"
    echo "  d) Definir, inicializar y crear el arranque automático de un pool"
    echo "3) Borrar pools"
    echo "4) Generar informe de pools"
    echo "5) Salir"
    read -p "Opción: " option

    case $option in
        1) view_pools ;;
        2)
            echo "Seleccione una sub-opción:"
            echo "  a) Crear discos duros en un pool"
            echo "  b) Mostrar información de los discos duros"
            echo "  c) Agregar discos duros a una VM"
            echo "  d) Crear e inicializar un pool con arranque automático"
            read -p "Sub-opción: " sub_option
            case $sub_option in
                a) create_disks ;;
                b) show_disk_info ;;
                c) add_disks_to_vm ;;
                d) create_pool ;;
                *) echo "Sub-opción no válida" ;;
            esac
            ;;
        3) delete_pool ;;
        4) generate_report ;;
        5) echo "Saliendo..."; exit ;;
        *) echo "Opción no válida" ;;
    esac
done
